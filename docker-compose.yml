version: '3.8'

services:
  backend:
    build:
      context: docker/nodejs
      args:
        UID: ${DOCKER_UID}
        GID: ${DOCKER_GID}
    entrypoint: sh -c "yarn && yarn start:dev"
    depends_on:
      - db
    volumes:
      - ./backend:/var/www

  nginx:
    image: nginx:1.21.1-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./:/www
      - ./docker/nginx/conf.d/development.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
  db:
    image: mongo:5.0.2
    restart: always
    environment:
      - "MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}"
      - "MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}"
      - "MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}"
    ports:
      - 27017:27017
    volumes:
      - ./docker/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - database:/data/db

  mongo-express:
    image: mongo-express:0.54.0
    restart: always
    environment:
      - "ME_CONFIG_MONGODB_SERVER=db"
      - "ME_CONFIG_MONGODB_PORT=${MONGO_PORT}"
      - "ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}"
      - "ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}"
    ports:
      - 8081:8081
    depends_on:
      - db

volumes:
  database: